// <auto-generated />
using BC2G.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BC2G.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BC2G.Blockchains.Bitcoin.Model.Utxo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedInBlockHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedInBlockHeight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedInCount")
                        .HasColumnType("integer");

                    b.Property<string>("ReferencedInBlockHeight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReferencedInCount")
                        .HasColumnType("integer");

                    b.Property<int>("ScriptType")
                        .HasColumnType("integer");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("Utxo");
                });
#pragma warning restore 612, 618
        }
    }
}
